Description: remove SSE guards
Author: Dominique Belhachemi <domibel@debian.org>
Index: tvc-5.0.2+dfsg/BaseCaller/TreephaserSSE.cpp
===================================================================
--- tvc-5.0.2+dfsg.orig/BaseCaller/TreephaserSSE.cpp
+++ tvc-5.0.2+dfsg/BaseCaller/TreephaserSSE.cpp
@@ -1,6 +1,7 @@
 /* Copyright (C) 2012 Ion Torrent Systems, Inc. All Rights Reserved */
 
 #include "TreephaserSSE.h"
+#include <x86intrin.h>
 
 #include <vector>
 #include <algorithm>
@@ -18,15 +19,6 @@
 #define AD_NRES_OFS (2*MAX_VALS*4*sizeof(float)+16)
 #define AD_PRES_OFS (3*MAX_VALS*4*sizeof(float)+16)
 
-#define NO_SSE_MESSAGE "TreephaserSSE compiled without SSE"
-#define NO_SSE3_MESSAGE "TreephaserSSE compiled without SSE3"
-
-#ifdef __SSE__
-#include <x86intrin.h>
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
-
 using namespace std;
 
 namespace {
@@ -36,7 +28,6 @@ ALWAYS_INLINE float Sqr(float val) {
 }
 
 inline void setZeroSSE(void *dst, int size) {
-#ifdef __SSE__
   __m128i r0 = _mm_setzero_si128();
   while((size & 31) != 0) {
     --size;
@@ -47,13 +38,9 @@ inline void setZeroSSE(void *dst, int si
     _mm_store_si128((__m128i RESTRICT_PTR)((char RESTRICT_PTR)dst+size-32), r0);
     size -= 32;
   }
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 }
 
 inline void setValueSSE(float *buf, float val, int size) {
-#ifdef __SSE__
   int mod = size % 4;
   int i=0;
   while(i<(size - mod)) {
@@ -66,14 +53,10 @@ inline void setValueSSE(float *buf, floa
     buf[i] = val;
     i++;
   }  
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 }
 
 
 inline void copySSE(void *dst, void *src, int size) {
-#ifdef __SSE__
   while((size & 31) != 0) {
     --size;
     ((char RESTRICT_PTR)dst)[size] = ((char RESTRICT_PTR)src)[size];
@@ -85,14 +68,10 @@ inline void copySSE(void *dst, void *src
     _mm_store_si128((__m128i RESTRICT_PTR)((char RESTRICT_PTR)dst+size-32), r1);
     size -= 32;
   }
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 }
 
 inline float sumOfSquaredDiffsFloatSSE(float RESTRICT_PTR src1, float RESTRICT_PTR src2, int count) {
   float sum = 0.0f;
-#ifdef __SSE__
   while((count & 3) != 0) {
     --count;
     sum += Sqr(src1[count]-src2[count]);
@@ -113,14 +92,10 @@ inline float sumOfSquaredDiffsFloatSSE(f
   r0 = _mm_movehl_ps(r0, r0);
   r0 = _mm_add_ps(r0, r2);
   _mm_store_ss(&sum, r0);
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
   return sum;
 }
 
 inline float vecSumSSE(float RESTRICT_PTR src, int count){
-#ifdef __SSE3__
   float sum = 0.0f;
   while((count & 3) != 0) {
     --count;
@@ -135,10 +110,6 @@ inline float vecSumSSE(float RESTRICT_PT
   r0 = _mm_hadd_ps(r0, r0);
   r0 = _mm_hadd_ps(r0, r0);
   return _mm_cvtss_f32(r0);
-#else
-#pragma message NO_SSE3_MESSAGE
-  return 0.0f;
-#endif
 }
 
 inline float  sumOfSquaredDiffsFloatSSE_recal(float RESTRICT_PTR src1, float RESTRICT_PTR src2, float RESTRICT_PTR A, float RESTRICT_PTR B, int count) {
@@ -149,7 +120,6 @@ inline float  sumOfSquaredDiffsFloatSSE_
     --count;
       sum += Sqr(src1[count]-src2[count]*A[count]-B[count]);
   }
-#ifdef __SSE__
   __m128 r0 = _mm_load_ss(&sum);
   while(count > 0) {
     __m128 r1 = _mm_load_ps(&src1[count-4]);
@@ -171,14 +141,10 @@ inline float  sumOfSquaredDiffsFloatSSE_
   r0 = _mm_movehl_ps(r0, r0);
   r0 = _mm_add_ps(r0, r2);
   _mm_store_ss(&sum, r0);
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
   return sum;
 }
 
 inline void sumVectFloatSSE(float RESTRICT_PTR dst, float RESTRICT_PTR src, int count) {
-#ifdef __SSE__
   while((count & 3) != 0) {
     --count;
     dst[count] += src[count];
@@ -189,12 +155,8 @@ inline void sumVectFloatSSE(float RESTRI
     _mm_store_ps(&dst[count-4], r0);
     count -= 4;
   }
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 }
 
-#ifdef __SSE__
 // Function for recalibrating single prediction flow 
 inline __m128 applyRecalModel(__m128 current_value, PathRec RESTRICT_PTR current_path, int i){
     __m128 rCoeffA = _mm_set1_ps(current_path->calib_A[i]);
@@ -203,9 +165,6 @@ inline __m128 applyRecalModel(__m128 cur
     current_value = _mm_add_ps(current_value, rCoeffB);
     return current_value;
 }
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 
 };
 
@@ -465,7 +424,6 @@ void TreephaserSSE::nextState(PathRec RE
 
 void TreephaserSSE::advanceState4(PathRec RESTRICT_PTR parent, int end)
 {
-#ifdef __SSE__
   
   /* SSE instructions used in this routine
 
@@ -1015,9 +973,6 @@ void TreephaserSSE::advanceState4(PathRe
     _mm_store_si128((__m128i RESTRICT_PTR)ad_End, rEnd);
 
   }
-#else
-#pragma message NO_SSE_MESSAGE
-#endif
 }
 
 void TreephaserSSE::sumNormMeasures() {
